name: 0.1.$(Rev:r)

trigger:
  batch: true
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: terraform_download_sha
    value: 43806e68f7af396449dd4577c6e5cb63c6dc4a253ae233e1dddc46cf423d808b
  - name: terraform_version
    value: 0.12.8
  - name: tf_in_automation
    value: true

steps:
  - task: Bash@3
    inputs:
      filePath: './scripts/terraform-download.sh'
    displayName: 'Terraform Download'

  - task: AzureCLI@1
    inputs:
      azureSubscription: 'Azure MSDN'
      scriptLocation: 'scriptPath'
      scriptPath: './scripts/terraform-init.sh'
      arguments: '$(Build.SourcesDirectory)'
      addSpnToEnvironment: true
      failOnStandardError: true
    displayName: 'Terraform Init'

  - task: AzureCLI@1
    inputs:
      azureSubscription: 'Azure MSDN'
      scriptLocation: 'scriptPath'
      scriptPath: './scripts/terraform-plan.sh'
      arguments: '$(Build.SourcesDirectory)'
      addSpnToEnvironment: true
      failOnStandardError: true
    displayName: 'Terraform Plan'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      includeRootFolder: false
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tgz'
      replaceExistingArchive: true
    displayName: 'Create Plan Artifact'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish Plan Artifact'